predict(model,as.data.frame(pvl$ds))
data.frame(ds=pvl$ds)
predict(model,data.frame(ds=pvl$ds))
require(forecast)
require(ggplot2)
require(reshape2)
require(data.table)
require(prophet)
# Load Data:
data = fread('USD_INR.csv',data.table = F)
data$Date = as.POSIXct(data$Date,format='%B %d, %Y')
data = data[with(data, order(Date)), ]
data = data['Price']
data = ts(data)
#Plot:
plot(data)
#Split:
ntr = as.integer(nrow(data)*0.8)
tr = data[1:ntr]
vl = data[(ntr+1):nrow(data)]
tr = ts(tr)
vl = ts(vl)
#Auto Arima:
model0 = forecast::auto.arima(tr)
pred0 = forecast::forecast(model0,h=length(vl))
pred0 = pred0$mean
#ETS:
model1 = forecast::ets(tr)
pred1 = forecast::forecast(model1,h=length(vl))
pred1 = pred1$mean
#NN:
model2 = forecast::nnetar(tr)
pred2 = forecast::forecast(model2,h=length(vl))
pred2 = pred2$mean
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr)
pred3 = predict(model,data.frame(ds=pvl$ds))
#Plot:
plot(data)
#Split:
data
head(vl)
class(pred0)
class(pred3)
head(pred3)
pred3 = pred3$yhat
pred3
pred3 = ts(pred3)
#Split:
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred2)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred2)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
ets = as.numeric(tr),
nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
ets = as.numeric(tr),
nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
p_dat2 = data.frame(
label=as.numeric(vl),
arima=as.numeric(pred0),
ets=as.numeric(pred1),
nn=as.numeric(pred2),
prophet=as.numeric(pred3),
blend=as.numeric((pred0+pred1+pred2+pred3)/4)
)
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
ets = as.numeric(tr),
nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
as.numeric(vl)
as.numeric(pred0)
as.numeric(pred1)
as.numeric(pred2)
as.numeric(pred3)
pred0+pred1+pred2+pred3
pred0
length(pred0)
length(pred1)
length(pred2)
length(pred3)
as.numeric(pred0)+as.numeric(pred1)+as.numeric(pred2)+as.numeric(pred3)
p_dat2 = data.frame(
label=as.numeric(vl),
arima=as.numeric(pred0),
ets=as.numeric(pred1),
nn=as.numeric(pred2),
prophet=as.numeric(pred3),
blend=(as.numeric(pred0)+as.numeric(pred1)+as.numeric(pred2)+as.numeric(pred3))/4
)
p_dat = rbind(p_dat1,p_dat2)
p_dat$id = seq(1:nrow(p_dat))
d = reshape2::melt(p_dat, id="id")
ggplot(data=d,
aes(x=id, y=value, colour=variable)) +
geom_line()
require(forecast)
require(ggplot2)
require(reshape2)
require(data.table)
require(prophet)
# Load Data:
data = fread('USD_INR.csv',data.table = F)
data$Date = as.POSIXct(data$Date,format='%B %d, %Y')
data = data[with(data, order(Date)), ]
data = data['Price']
data = ts(data)
#Plot:
plot(data)
#Split:
ntr = as.integer(nrow(data)*0.8)
tr = data[1:ntr]
vl = data[(ntr+1):nrow(data)]
tr = ts(tr)
vl = ts(vl)
#Auto Arima:
model0 = forecast::auto.arima(tr)
pred0 = forecast::forecast(model0,h=length(vl))
pred0 = pred0$mean
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr)
pred3 = predict(model,data.frame(ds=pvl$ds))
pred3 = pred3$yhat
pred3 = ts(pred3)
#Plot:
plot(data)
#Split:
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred2)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
# ets = as.numeric(tr),
# nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
p_dat2 = data.frame(
label=as.numeric(vl),
arima=as.numeric(pred0),
# ets=as.numeric(pred1),
# nn=as.numeric(pred2),
prophet=as.numeric(pred3),
blend=(as.numeric(pred0)+as.numeric(pred3))/2
)
p_dat = rbind(p_dat1,p_dat2)
p_dat$id = seq(1:nrow(p_dat))
d = reshape2::melt(p_dat, id="id")
ggplot(data=d,
aes(x=id, y=value, colour=variable)) +
geom_line()
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
head(data)
??forecast
data = fread('USD_INR.csv',data.table = F)
head(data)
??forecast
require(forecast)
require(ggplot2)
require(reshape2)
require(data.table)
require(prophet)
# Load Data:
data = fread('USD_INR.csv',data.table = F)
data$Date = as.POSIXct(data$Date,format='%B %d, %Y')
data = data[with(data, order(Date)), ]
data = data['Price']
data = ts(data)
#Plot:
plot(data)
#Split:
ntr = as.integer(nrow(data)*0.8)
tr = data[1:ntr]
vl = data[(ntr+1):nrow(data)]
tr = ts(tr)
vl = ts(vl)
#Auto Arima:
model0 = forecast::auto.arima(tr)
pred0 = forecast::forecast(model0,h=length(vl))
pred0 = pred0$mean
model1 = forecast::ses(tr)
#Expo Smoothing
model1 = forecast::ses(tr)
pred1 = forecast::forecast(model1,h=length(vl))
pred1 = pred1$mean
#Expo Smoothing
model1 = forecast::ses(tr)
pred1 = forecast::forecast(model1,h=length(vl))
length(vl)
model1 = forecast::ses(tr,h=length(vl))
pred1 = forecast::forecast(model1,h=length(vl))
pred1 = pred1$mean
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
expo_sm = as.numeric(tr),
# nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
p_dat2 = data.frame(
label=as.numeric(vl),
arima=as.numeric(pred0),
expo_sm=as.numeric(pred1),
# nn=as.numeric(pred2),
prophet=as.numeric(pred3),
blend=(as.numeric(pred0)+as.numeric(pred3))/2
)
p_dat = rbind(p_dat1,p_dat2)
p_dat$id = seq(1:nrow(p_dat))
d = reshape2::melt(p_dat, id="id")
ggplot(data=d,
aes(x=id, y=value, colour=variable)) +
geom_line()
require(forecast)
require(ggplot2)
require(reshape2)
require(data.table)
require(prophet)
# Load Data:
data = fread('USD_INR.csv',data.table = F)
data$Date = as.POSIXct(data$Date,format='%B %d, %Y')
data = data[with(data, order(Date)), ]
data = data['Price']
data = ts(data)
#Plot:
plot(data)
#Split:
ntr = as.integer(nrow(data)*0.8)
tr = data[1:ntr]
vl = data[(ntr+1):nrow(data)]
tr = ts(tr)
vl = ts(vl)
#Auto Arima:
model0 = forecast::auto.arima(tr)
pred0 = forecast::forecast(model0,h=length(vl))
pred0 = pred0$mean
#Expo Smoothing
model1 = forecast::ses(tr,h=length(vl))
pred1 = forecast::forecast(model1,h=length(vl))
pred1 = pred1$mean
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr)
pred3 = predict(model,data.frame(ds=pvl$ds))
pred3 = pred3$yhat
pred3 = ts(pred3)
#Plot:
plot(data)
#Split:
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
# print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
# print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr,daily.seasonality=TRUE)
pred3 = predict(model,data.frame(ds=pvl$ds))
pred3 = pred3$yhat
pred3 = ts(pred3)
#Plot:
plot(data)
#Split:
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
# print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#plot:
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
# expo_sm = as.numeric(tr),
# nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
p_dat2 = data.frame(
label=as.numeric(vl),
arima=as.numeric(pred0),
# expo_sm=as.numeric(pred1),
# nn=as.numeric(pred2),
prophet=as.numeric(pred3),
blend=(as.numeric(pred0)+as.numeric(pred3))/2
)
p_dat = rbind(p_dat1,p_dat2)
p_dat$id = seq(1:nrow(p_dat))
d = reshape2::melt(p_dat, id="id")
ggplot(data=d,
aes(x=id, y=value, colour=variable)) +
geom_line()
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr)
pred3 = predict(model,data.frame(ds=pvl$ds))
pred3 = pred3$yhat
pred3 = ts(pred3)
#Plot:
plot(data)
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
# print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr,growth = 'linear')
pred3 = predict(model,data.frame(ds=pvl$ds))
pred3 = pred3$yhat
pred3 = ts(pred3)
#Plot:
plot(data)
#Split:
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
# print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#Prophet:
data = fread('USD_INR.csv',data.table = F)
data = data[,c('Price','Date')]
colnames(data) = c('y','ds')
data$ds = as.POSIXct(data$ds,format='%B %d, %Y')
data = data[with(data, order(ds)), ]
data = data[,c('ds','y')]
ntr = as.integer(nrow(data)*0.8)
ptr = data[1:ntr,]
pvl = data[(ntr+1):nrow(data),]
model = prophet(ptr,growth = 'logistic')
pred3 = predict(model,data.frame(ds=pvl$ds))
pred3 = pred3$yhat
pred3 = ts(pred3)
#Plot:
plot(data)
#Split:
#RMSE:
rmse = function(x,y){
return(sqrt(mean((x-y)**2)))
}
print('RMSE:')
print(rmse(as.numeric(vl),as.numeric(pred0)))
# print(rmse(as.numeric(vl),as.numeric(pred1)))
print(rmse(as.numeric(vl),as.numeric(pred3)))
#plot:
p_dat1 = data.frame(
label = as.numeric(tr),
arima = as.numeric(tr),
# expo_sm = as.numeric(tr),
# nn = as.numeric(tr),
prophet = as.numeric(tr),
blend = as.numeric(tr) )
p_dat2 = data.frame(
label=as.numeric(vl),
arima=as.numeric(pred0),
# expo_sm=as.numeric(pred1),
# nn=as.numeric(pred2),
prophet=as.numeric(pred3),
blend=(as.numeric(pred0)+as.numeric(pred3))/2
)
p_dat = rbind(p_dat1,p_dat2)
p_dat$id = seq(1:nrow(p_dat))
d = reshape2::melt(p_dat, id="id")
ggplot(data=d,
aes(x=id, y=value, colour=variable)) +
geom_line()
?prophet
data['Price']
require(forecast)
require(ggplot2)
require(reshape2)
require(data.table)
require(prophet)
# Load Data:
data = fread('USD_INR.csv',data.table = F)
data$Date = as.POSIXct(data$Date,format='%B %d, %Y')
data = data[with(data, order(Date)), ]
data = data['Price']
######### 8.97,,,,,13.34
data
require(forecast)
require(ggplot2)
require(reshape2)
require(data.table)
require(prophet)
# Load Data:
data = fread('USD_INR.csv',data.table = F)
data$Date = as.POSIXct(data$Date,format='%B %d, %Y')
data = data[with(data, order(Date)), ]
data = log(data['Price'])
